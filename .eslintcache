[{"/Users/artemdigtiar/Desktop/todo/users_list/src/App.js":"1","/Users/artemdigtiar/Desktop/todo/users_list/src/Components/Users_info.jsx":"2","/Users/artemdigtiar/Desktop/todo/users_list/src/Components/Users.jsx":"3","/Users/artemdigtiar/Desktop/todo/users_list/src/index.js":"4","/Users/artemdigtiar/Desktop/todo/users_list/src/Components/Form.jsx":"5","/Users/artemdigtiar/Desktop/todo/users_list/src/reportWebVitals.js":"6"},{"size":1761,"mtime":1611298012807,"results":"7","hashOfConfig":"8"},{"size":1929,"mtime":1611296999204,"results":"9","hashOfConfig":"8"},{"size":978,"mtime":1611208572045,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1610514529987,"results":"11","hashOfConfig":"8"},{"size":3721,"mtime":1611642807466,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":1610514529988,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"12sgup5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/artemdigtiar/Desktop/todo/users_list/src/App.js",["27"],"import './App.css';\nimport Users from \"../src/Components/Users\"\nimport Users_info from \"../src/Components/Users_info\"\nimport Form from \"../src/Components/Form\"\n\nimport {useState, useEffect} from \"react\";\n\nfunction App() {\n    const [users, setUsers] = useState([]);\n    const [userInfo, setUserInfo] = useState(null);\n    const [currentUserID, setCurrentUserID] = useState('');\n    const [editableUser, setEditableUser] = useState(false);\n    const [formFields, setFormFields] = useState({\n        firstName: '',\n        lastName: '',\n        phone: '',\n        email: '',\n        company: '',\n        address: ''\n\n    });\n\n\n    useEffect(() => {\n        fetch(\"https://5fec128e573752001730b0f1.mockapi.io/users\")\n            .then(response => response.json())\n            .then(response  => setUsers(response))\n    }, []);\n\n\n  return (\n    <div className=\"main_page\">\n        <Form\n            formFields={formFields}\n            setUsers={setUsers}\n            setFormFields={setFormFields}\n            editableUser={editableUser}\n            currentUserID={currentUserID}\n        />\n        <div className=\"main_container\">\n\n            <Users\n                users={users}\n                setUserInfo={setUserInfo}\n                setCurrentUserID={setCurrentUserID}\n                currentUserID={currentUserID}\n            />\n            <Users_info\n                userInfo={userInfo}\n                users={users}\n                setUsers={setUsers}\n                setUserInfo={setUserInfo}\n                setCurrentUserID={setCurrentUserID}\n                setFormFields={setFormFields}\n                currentUserID={currentUserID}\n                setEditableUser={setEditableUser}\n            />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/artemdigtiar/Desktop/todo/users_list/src/Components/Users_info.jsx",[],"/Users/artemdigtiar/Desktop/todo/users_list/src/Components/Users.jsx",["28"],"/Users/artemdigtiar/Desktop/todo/users_list/src/index.js",[],"/Users/artemdigtiar/Desktop/todo/users_list/src/Components/Form.jsx",[],"/Users/artemdigtiar/Desktop/todo/users_list/src/reportWebVitals.js",[],{"ruleId":"29","severity":1,"message":"30","line":48,"column":13,"nodeType":"31","endLine":57,"endColumn":15},{"ruleId":"32","severity":1,"message":"33","line":23,"column":25,"nodeType":"31","endLine":23,"endColumn":72},"react/jsx-pascal-case","Imported JSX component Users_info must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]